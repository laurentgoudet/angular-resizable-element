{"version":3,"sources":["../../../src/resizeHandle.directive.ts"],"names":[],"mappings":"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","file":"resizeHandle.directive.js","sourceRoot":"","sourcesContent":["import { Directive, Input, HostListener, Renderer2, ElementRef, OnDestroy, NgZone } from '@angular/core';\nimport { Resizable } from './resizable.directive';\nimport { Edges } from './interfaces/edges.interface';\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n * \n * For example\n * \n * ```\n * &lt;div mwlResizable&gt;\n *   &lt;div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"&gt;&lt;/div&gt;\n * &lt;/div&gt;\n * ```\n */\nexport class ResizeHandle implements OnDestroy {\n/**\n * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n */\nresizeEdges: Edges = {};\npublic resizable: Resizable;\nprivate eventListeners: {\n    touchmove?: Function,\n    mousemove?: Function\n  } = {};\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} zone\n */\nconstructor(private renderer: Renderer2,\nprivate element: ElementRef,\nprivate zone: NgZone) {}\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n/**\n * @param {?} event\n * @param {?} mouseX\n * @param {?} mouseY\n * @return {?}\n */\nonMousedown(event: any, mouseX: number, mouseY: number): void {\n    event.preventDefault();\n    this.zone.runOutsideAngular(() => {\n      if (!this.eventListeners.touchmove) {\n        this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', (event: any) => {\n          this.onMousemove(event, event.targetTouches[0].clientX, event.targetTouches[0].clientY);\n        });\n      }\n      if (!this.eventListeners.mousemove) {\n        this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', (event: any) => {\n          this.onMousemove(event, event.clientX, event.clientY);\n        });\n      }\n      this.resizable.mousedown.next({mouseX, mouseY, edges: this.resizeEdges});\n    });\n  }\n/**\n * @param {?} mouseX\n * @param {?} mouseY\n * @return {?}\n */\nonMouseup(mouseX: number, mouseY: number): void {\n    this.zone.runOutsideAngular(() => {\n      this.unsubscribeEventListeners();\n      this.resizable.mouseup.next({mouseX, mouseY, edges: this.resizeEdges});\n    });\n  }\n/**\n * @param {?} event\n * @param {?} mouseX\n * @param {?} mouseY\n * @return {?}\n */\nprivate onMousemove(event: any, mouseX: number, mouseY: number): void {\n    this.resizable.mousemove.next({mouseX, mouseY, edges: this.resizeEdges, event});\n  }\n/**\n * @return {?}\n */\nprivate unsubscribeEventListeners(): void {\n    Object.keys(this.eventListeners).forEach(type => {\n      this.eventListeners[type]();\n      delete this.eventListeners[type];\n    });\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mwlResizeHandle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'resizeEdges': [{ type: Input },],\n'onMousedown': [{ type: HostListener, args: ['touchstart', ['$event', '$event.touches[0].clientX', '$event.touches[0].clientY'], ] },{ type: HostListener, args: ['mousedown', ['$event', '$event.clientX', '$event.clientY'], ] },],\n'onMouseup': [{ type: HostListener, args: ['touchend', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY'], ] },{ type: HostListener, args: ['touchcancel', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY'], ] },{ type: HostListener, args: ['mouseup', ['$event.clientX', '$event.clientY'], ] },],\n};\n}\n\nfunction ResizeHandle_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeHandle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeHandle.ctorParameters;\n/** @type {?} */\nResizeHandle.propDecorators;\n/**\n * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n * @type {?}\n */\nResizeHandle.prototype.resizeEdges;\n/** @type {?} */\nResizeHandle.prototype.resizable;\n/** @type {?} */\nResizeHandle.prototype.eventListeners;\n/** @type {?} */\nResizeHandle.prototype.renderer;\n/** @type {?} */\nResizeHandle.prototype.element;\n/** @type {?} */\nResizeHandle.prototype.zone;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}